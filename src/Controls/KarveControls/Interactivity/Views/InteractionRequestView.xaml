<UserControl x:Class="KarveControls.Interactivity.Views.InteractionRequestView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:views="clr-namespace:KarveControls.Interactivity.Views"
             xmlns:viewModels="clr-namespace:KarveControls.Interactivity.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="600" Loaded="UserControl_Loaded">
    
    <UserControl.DataContext>
        <viewModels:InteractionRequestViewModel />
    </UserControl.DataContext>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding ItemSelectionRequest, Mode=OneWay}">
            <!-- This PopupWindowAction has a custom view defined. When this action is executed the view will be shown inside a new window -->
            <!-- Take into account that the view and its view model are created only once and will be reused each time the action is executed -->
            <prism:PopupWindowAction IsModal="True"  >
                <prism:PopupWindowAction.WindowContent>
                    <!-- 
                    As further step here we can add a datatemplate selector
                    In this case we can put any custom view following the view model
                    We want to stretch the view.
                    -->
                    <views:ItemSelectionView Width="NaN" Height="NaN"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

    </i:Interaction.Triggers>
 
</UserControl>
